{"ast":null,"code":"// get all recipes\nconst getRecipes = async () => {\n  try {\n    const response = await fetch(\"http://localhost:4000/api/recipes\");\n    const json = await response.json();\n    return json;\n  } catch (e) {\n    alert(e.message);\n  }\n};\n\n// get a recipe fetch method\nconst getRecipeDetails = async id => {\n  try {\n    const response = await fetch(\"http://localhost:4000/api/recipes\" + id);\n    const json = await response.json();\n    return json;\n  } catch (e) {\n    alert(e.message);\n  }\n};\n\n// create a recipe fetch method\nconst createRecipe = async recipe => {\n  try {\n    const response = await fetch(\"http://localhost:4000/api/recipes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(recipe)\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to add recipe\");\n    }\n  } catch (error) {\n    throw error;\n  }\n};\n\n//update recipe fetch method\nconst updateRecipe = async ({\n  editid,\n  recipe\n}) => {\n  try {\n    const response = await fetch(\"http://localhost:4000/api/recipes\" + editid, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(recipe)\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to edit recipe\");\n    }\n  } catch (error) {\n    alert(error);\n  }\n};\n//delete recipe fetch method\nconst deleteRecipe = async id => {\n  try {\n    const response = await fetch(\"http://localhost:4000/api/recipes\" + id, {\n      method: \"DELETE\"\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to delete recipe\");\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport { getRecipes, getRecipeDetails, updateRecipe, createRecipe, deleteRecipe };","map":{"version":3,"names":["getRecipes","response","fetch","json","e","alert","message","getRecipeDetails","id","createRecipe","recipe","method","headers","body","JSON","stringify","ok","Error","error","updateRecipe","editid","deleteRecipe"],"sources":["/Users/liaohungen/projects/react_recipe/frontend/src/services/JsonServerClient.js"],"sourcesContent":["// get all recipes\nconst getRecipes = async () => {\n  try {\n    const response = await fetch(\"http://localhost:4000/api/recipes\");\n    const json = await response.json();\n    return json;\n  } catch (e) {\n    alert(e.message);\n  }\n};\n\n// get a recipe fetch method\nconst getRecipeDetails = async (id) => {\n  try {\n    const response = await fetch(\"http://localhost:4000/api/recipes\" + id);\n    const json = await response.json();\n    return json;\n  } catch (e) {\n    alert(e.message);\n  }\n};\n\n// create a recipe fetch method\nconst createRecipe = async (recipe) => {\n  try {\n    const response = await fetch(\"http://localhost:4000/api/recipes\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(recipe),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to add recipe\");\n    }\n  } catch (error) {\n    throw error;\n  }\n};\n\n//update recipe fetch method\nconst updateRecipe = async ({ editid, recipe }) => {\n  try {\n    const response = await fetch(\"http://localhost:4000/api/recipes\" + editid, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(recipe),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to edit recipe\");\n    }\n  } catch (error) {\n    alert(error);\n  }\n};\n//delete recipe fetch method\nconst deleteRecipe = async (id) => {\n  try {\n    const response = await fetch(\"http://localhost:4000/api/recipes\" + id, {\n      method: \"DELETE\",\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to delete recipe\");\n    }\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport {\n  getRecipes,\n  getRecipeDetails,\n  updateRecipe,\n  createRecipe,\n  deleteRecipe,\n};\n"],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;IACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClC,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVC,KAAK,CAACD,CAAC,CAACE,OAAO,CAAC;EAClB;AACF,CAAC;;AAED;AACA,MAAMC,gBAAgB,GAAG,MAAOC,EAAE,IAAK;EACrC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,GAAGM,EAAE,CAAC;IACtE,MAAML,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClC,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVC,KAAK,CAACD,CAAC,CAACE,OAAO,CAAC;EAClB;AACF,CAAC;;AAED;AACA,MAAMG,YAAY,GAAG,MAAOC,MAAM,IAAK;EACrC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChES,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACT,QAAQ,CAACe,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMC,YAAY,GAAG,MAAAA,CAAO;EAAEC,MAAM;EAAEV;AAAO,CAAC,KAAK;EACjD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,GAAGkB,MAAM,EAAE;MACzET,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACT,QAAQ,CAACe,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdb,KAAK,CAACa,KAAK,CAAC;EACd;AACF,CAAC;AACD;AACA,MAAMG,YAAY,GAAG,MAAOb,EAAE,IAAK;EACjC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,GAAGM,EAAE,EAAE;MACrEG,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACV,QAAQ,CAACe,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,SACElB,UAAU,EACVO,gBAAgB,EAChBY,YAAY,EACZV,YAAY,EACZY,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}