{"ast":null,"code":"var _jsxFileName = \"/Users/liaohungen/projects/react_recipe/frontend/src/pages/Create/index.js\",\n  _s = $RefreshSig$();\n/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createRecipe } from \"../../services/JsonServerClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  _s();\n  const [dish, setDish] = useState(\"\");\n  const [ingredient, setIngredient] = useState(\"\");\n  const [process, setProcess] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [category, setCategory] = useState(\"main\");\n  const [note, setNote] = useState(\"main\");\n  const [isPending, setIsPending] = useState(false);\n  const navigate = useNavigate();\n\n  // Function to capitalize the first letter of each word\n  const capitalizeWords = input => {\n    const lowerInput = input.toLowerCase();\n    return lowerInput.split(\" \").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \");\n  };\n\n  // Function to autogenerate image name from dish input and I will put image into local file\n  const getImageName = input => {\n    const lowerInput = input.toLowerCase();\n    return lowerInput.split(\" \").join(\"\") + \".jpg\";\n  };\n\n  // Function to catch submitted data\n  const handleSubmit = async e => {\n    // remove brower refresh (default behavior)\n    e.preventDefault();\n\n    // Capitalize the words in the 'dish' input\n\n    const imageName = getImageName(dish);\n\n    // a new recipe content\n    const recipe = {\n      dish: capitalizeWords(dish),\n      ingredient,\n      process,\n      country,\n      category,\n      note,\n      image: imageName\n    };\n    setIsPending(true);\n\n    // send created data to json.server\n    try {\n      await createRecipe(recipe);\n      console.log(\"New Recipe Added\");\n      setIsPending(false);\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error adding recipe:\", error);\n      setIsPending(false);\n    }\n  };\n\n  // input form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Dish Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: dish,\n        onChange: e => setDish(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ingredient (Please Split each ingredient with \\\" ; (semicolon) \\\" )\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        value: ingredient,\n        onChange: e => setIngredient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Process (Please put number order for each step and split them with \\\" ; (semicolon)\\\") \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), \"like 1.cook ; 2. eat ; 3.clean\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        value: process,\n        onChange: e => setProcess(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Country/Origin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: country,\n        onChange: e => setCountry(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"main\",\n          children: \"main-course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"side\",\n          children: \"side-dish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"soup\",\n          children: \"soup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"salad\",\n          children: \"salad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dessert\",\n          children: \"dessert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"drink\",\n          children: \"drink\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: note,\n        onChange: e => setNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add New Dish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 24\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Adding new dish ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Create, \"stQZFH0m4gy/tbOpABmNH9VoE0Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nexport default Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","useNavigate","createRecipe","jsxDEV","_jsxDEV","Create","_s","dish","setDish","ingredient","setIngredient","process","setProcess","country","setCountry","category","setCategory","note","setNote","isPending","setIsPending","navigate","capitalizeWords","input","lowerInput","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","getImageName","handleSubmit","e","preventDefault","imageName","recipe","image","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["/Users/liaohungen/projects/react_recipe/frontend/src/pages/Create/index.js"],"sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createRecipe } from \"../../services/JsonServerClient\";\n\nconst Create = () => {\n  const [dish, setDish] = useState(\"\");\n  const [ingredient, setIngredient] = useState(\"\");\n  const [process, setProcess] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [category, setCategory] = useState(\"main\");\n  const [note, setNote] = useState(\"main\");\n\n  const [isPending, setIsPending] = useState(false);\n  const navigate = useNavigate();\n\n  // Function to capitalize the first letter of each word\n  const capitalizeWords = (input) => {\n    const lowerInput = input.toLowerCase();\n    return lowerInput\n      .split(\" \")\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(\" \");\n  };\n\n  // Function to autogenerate image name from dish input and I will put image into local file\n  const getImageName = (input) => {\n    const lowerInput = input.toLowerCase();\n    return lowerInput.split(\" \").join(\"\") + \".jpg\";\n  };\n\n  // Function to catch submitted data\n  const handleSubmit = async (e) => {\n    // remove brower refresh (default behavior)\n    e.preventDefault();\n\n    // Capitalize the words in the 'dish' input\n\n    const imageName = getImageName(dish);\n\n    // a new recipe content\n    const recipe = {\n      dish: capitalizeWords(dish),\n      ingredient,\n      process,\n      country,\n      category,\n      note,\n      image: imageName,\n    };\n\n    setIsPending(true);\n\n    // send created data to json.server\n    try {\n      await createRecipe(recipe);\n      console.log(\"New Recipe Added\");\n      setIsPending(false);\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error adding recipe:\", error);\n      setIsPending(false);\n    }\n  };\n\n  // input form\n  return (\n    <div className=\"create\">\n      <h2>Add a new recipe</h2>\n      <form onSubmit={handleSubmit}>\n        <label>Dish Name</label>\n        <input\n          type=\"text\"\n          required\n          value={dish}\n          onChange={(e) => setDish(e.target.value)}\n        />\n        <label>\n          Ingredient (Please Split each ingredient with \" ; (semicolon) \" )\n        </label>\n        <textarea\n          required\n          value={ingredient}\n          onChange={(e) => setIngredient(e.target.value)}\n        ></textarea>\n        <label>\n          Process (Please put number order for each step and split them with \" ;\n          (semicolon)\") <br></br>like 1.cook ; 2. eat ; 3.clean\n        </label>\n        <textarea\n          required\n          value={process}\n          onChange={(e) => setProcess(e.target.value)}\n        ></textarea>\n        <label>Country/Origin</label>\n        <input\n          type=\"text\"\n          value={country}\n          onChange={(e) => setCountry(e.target.value)}\n        />\n        <label>Category</label>\n        <select value={category} onChange={(e) => setCategory(e.target.value)}>\n          <option value=\"main\">main-course</option>\n          <option value=\"side\">side-dish</option>\n          <option value=\"soup\">soup</option>\n          <option value=\"salad\">salad</option>\n          <option value=\"dessert\">dessert</option>\n          <option value=\"drink\">drink</option>\n        </select>\n        <label>Note</label>\n        <input\n          type=\"text\"\n          value={note}\n          onChange={(e) => setNote(e.target.value)}\n        />\n        {!isPending && <button>Add New Dish</button>}\n        {isPending && <button disabled>Adding new dish ...</button>}\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}