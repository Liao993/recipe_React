{"ast":null,"code":"var _jsxFileName = \"/Users/liaohungen/projects/react_recipe/frontend/src/pages/Home/RecipeList.js\";\nimport { useState } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeList({\n  recipes,\n  query,\n  title\n}) {\n  //Search\n  const mySearch = category => {\n    setFood(Data.filter(item => {\n      return item.category === category;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-preview\",\n      children: recipes\n\n      // eslint-disable-next-line array-callback-return\n      .filter(post => {\n        // if search is empty, then return all recipes, else return filtered data\n        if (query === \"\") {\n          return post;\n        } else if (post.category.toLowerCase().includes(query.toLowerCase())) {\n          return post;\n        } else if (post.dish.toLowerCase().includes(query.toLowerCase())) {\n          return post;\n        } else if (post.country.toLowerCase().includes(query.toLowerCase())) {\n          return post;\n        } else if (post.ingredient.toLowerCase().includes(query.toLowerCase())) {\n          return post;\n        }\n      }).map(recipe =>\n      /*#__PURE__*/\n      // map is function like loop, to get all infromation of filtered data, and have link for each recipe\n      // The key prop is important for React to efficiently update and re-render lists of elements.\n      // ... can send all data in recipe\n      _jsxDEV(Card, {\n        ...recipe\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = RecipeList;\nexport default RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["useState","Card","jsxDEV","_jsxDEV","RecipeList","recipes","query","title","mySearch","category","setFood","Data","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","post","toLowerCase","includes","dish","country","ingredient","map","recipe","_id","_c","$RefreshReg$"],"sources":["/Users/liaohungen/projects/react_recipe/frontend/src/pages/Home/RecipeList.js"],"sourcesContent":["import { useState } from \"react\";\nimport Card from \"./Card\";\n\nfunction RecipeList({ recipes, query, title }) {\n  //Search\n  const mySearch = (category) => {\n    setFood(\n      Data.filter((item) => {\n        return item.category === category;\n      })\n    );\n  };\n  return (\n    <div className=\"recipe-list\">\n      <h2>{title}</h2>\n      <div className=\"recipe-preview\">\n        {recipes\n\n          // eslint-disable-next-line array-callback-return\n          .filter((post) => {\n            // if search is empty, then return all recipes, else return filtered data\n            if (query === \"\") {\n              return post;\n            } else if (\n              post.category.toLowerCase().includes(query.toLowerCase())\n            ) {\n              return post;\n            } else if (post.dish.toLowerCase().includes(query.toLowerCase())) {\n              return post;\n            } else if (\n              post.country.toLowerCase().includes(query.toLowerCase())\n            ) {\n              return post;\n            } else if (\n              post.ingredient.toLowerCase().includes(query.toLowerCase())\n            ) {\n              return post;\n            }\n          })\n\n          .map((recipe) => (\n            // map is function like loop, to get all infromation of filtered data, and have link for each recipe\n            // The key prop is important for React to efficiently update and re-render lists of elements.\n            // ... can send all data in recipe\n            <Card key={recipe._id} {...recipe} />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeList;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAC;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EAC7C;EACA,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;IAC7BC,OAAO,CACLC,IAAI,CAACC,MAAM,CAAEC,IAAI,IAAK;MACpB,OAAOA,IAAI,CAACJ,QAAQ,KAAKA,QAAQ;IACnC,CAAC,CACH,CAAC;EACH,CAAC;EACD,oBACEN,OAAA;IAAKW,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BZ,OAAA;MAAAY,QAAA,EAAKR;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBhB,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BV;;MAEC;MAAA,CACCO,MAAM,CAAEQ,IAAI,IAAK;QAChB;QACA,IAAId,KAAK,KAAK,EAAE,EAAE;UAChB,OAAOc,IAAI;QACb,CAAC,MAAM,IACLA,IAAI,CAACX,QAAQ,CAACY,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,KAAK,CAACe,WAAW,CAAC,CAAC,CAAC,EACzD;UACA,OAAOD,IAAI;QACb,CAAC,MAAM,IAAIA,IAAI,CAACG,IAAI,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,KAAK,CAACe,WAAW,CAAC,CAAC,CAAC,EAAE;UAChE,OAAOD,IAAI;QACb,CAAC,MAAM,IACLA,IAAI,CAACI,OAAO,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,KAAK,CAACe,WAAW,CAAC,CAAC,CAAC,EACxD;UACA,OAAOD,IAAI;QACb,CAAC,MAAM,IACLA,IAAI,CAACK,UAAU,CAACJ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,KAAK,CAACe,WAAW,CAAC,CAAC,CAAC,EAC3D;UACA,OAAOD,IAAI;QACb;MACF,CAAC,CAAC,CAEDM,GAAG,CAAEC,MAAM;MAAA;MACV;MACA;MACA;MACAxB,OAAA,CAACF,IAAI;QAAA,GAAsB0B;MAAM,GAAtBA,MAAM,CAACC,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACU,EAAA,GA9CQzB,UAAU;AAgDnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}