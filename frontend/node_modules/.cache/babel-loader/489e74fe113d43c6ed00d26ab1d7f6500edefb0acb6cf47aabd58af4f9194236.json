{"ast":null,"code":"var _jsxFileName = \"/Users/liaohungen/projects/react_recipe/frontend/src/pages/Home/RecipeList.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeList({\n  recipes,\n  query,\n  title\n}) {\n  _s();\n  const [food, setFood] = useState(recipes);\n\n  //Search\n  const mySearch = query => {\n    setFood(recipes.filter(post => {\n      // if search is empty, then return all recipes, else return filtered data\n      if (query === \"\") {\n        return post;\n      } else if (post.category.toLowerCase().includes(query.toLowerCase())) {\n        return post;\n      } else if (post.dish.toLowerCase().includes(query.toLowerCase())) {\n        return post;\n      } else if (post.country.toLowerCase().includes(query.toLowerCase())) {\n        return post;\n      } else if (post.ingredient.toLowerCase().includes(query.toLowerCase())) {\n        return post;\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-preview\",\n      children: [\".map((recipe) => ( // map is function like loop, to get all infromation of filtered data, and have link for each recipe // The key prop is important for React to efficiently update and re-render lists of elements. // ... can send all data in recipe\", /*#__PURE__*/_jsxDEV(Card, {\n        ...recipe\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \"))}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeList, \"4FHyJGLNqkmazOqYVHefKmNoC0M=\");\n_c = RecipeList;\nexport default RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["useState","Card","jsxDEV","_jsxDEV","RecipeList","recipes","query","title","_s","food","setFood","mySearch","filter","post","category","toLowerCase","includes","dish","country","ingredient","className","children","fileName","_jsxFileName","lineNumber","columnNumber","recipe","_id","_c","$RefreshReg$"],"sources":["/Users/liaohungen/projects/react_recipe/frontend/src/pages/Home/RecipeList.js"],"sourcesContent":["import { useState } from \"react\";\nimport Card from \"./Card\";\n\nfunction RecipeList({ recipes, query, title }) {\n  const [food, setFood] = useState(recipes);\n\n  //Search\n  const mySearch = (query) => {\n    setFood(\n      recipes.filter((post) => {\n        // if search is empty, then return all recipes, else return filtered data\n        if (query === \"\") {\n          return post;\n        } else if (post.category.toLowerCase().includes(query.toLowerCase())) {\n          return post;\n        } else if (post.dish.toLowerCase().includes(query.toLowerCase())) {\n          return post;\n        } else if (post.country.toLowerCase().includes(query.toLowerCase())) {\n          return post;\n        } else if (\n          post.ingredient.toLowerCase().includes(query.toLowerCase())\n        ) {\n          return post;\n        }\n      })\n    );\n  };\n  return (\n    <div className=\"recipe-list\">\n      <h2>{title}</h2>\n      <div className=\"recipe-preview\">\n        {/*\n        {recipes\n\n          // eslint-disable-next-line array-callback-return\n          .filter((post) => {\n            // if search is empty, then return all recipes, else return filtered data\n            if (query === \"\") {\n              return post;\n            } else if (\n              post.category.toLowerCase().includes(query.toLowerCase())\n            ) {\n              return post;\n            } else if (post.dish.toLowerCase().includes(query.toLowerCase())) {\n              return post;\n            } else if (\n              post.country.toLowerCase().includes(query.toLowerCase())\n            ) {\n              return post;\n            } else if (\n              post.ingredient.toLowerCase().includes(query.toLowerCase())\n            ) {\n              return post;\n            }\n          })\n           */}\n        .map((recipe) => ( // map is function like loop, to get all infromation\n        of filtered data, and have link for each recipe // The key prop is\n        important for React to efficiently update and re-render lists of\n        elements. // ... can send all data in recipe\n        <Card key={recipe._id} {...recipe} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeList;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAC;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACK,OAAO,CAAC;;EAEzC;EACA,MAAMM,QAAQ,GAAIL,KAAK,IAAK;IAC1BI,OAAO,CACLL,OAAO,CAACO,MAAM,CAAEC,IAAI,IAAK;MACvB;MACA,IAAIP,KAAK,KAAK,EAAE,EAAE;QAChB,OAAOO,IAAI;MACb,CAAC,MAAM,IAAIA,IAAI,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,KAAK,CAACS,WAAW,CAAC,CAAC,CAAC,EAAE;QACpE,OAAOF,IAAI;MACb,CAAC,MAAM,IAAIA,IAAI,CAACI,IAAI,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,KAAK,CAACS,WAAW,CAAC,CAAC,CAAC,EAAE;QAChE,OAAOF,IAAI;MACb,CAAC,MAAM,IAAIA,IAAI,CAACK,OAAO,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,KAAK,CAACS,WAAW,CAAC,CAAC,CAAC,EAAE;QACnE,OAAOF,IAAI;MACb,CAAC,MAAM,IACLA,IAAI,CAACM,UAAU,CAACJ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,KAAK,CAACS,WAAW,CAAC,CAAC,CAAC,EAC3D;QACA,OAAOF,IAAI;MACb;IACF,CAAC,CACH,CAAC;EACH,CAAC;EACD,oBACEV,OAAA;IAAKiB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BlB,OAAA;MAAAkB,QAAA,EAAKd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBtB,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAyBvB,0PAKN,eAAAlB,OAAA,CAACF,IAAI;QAAA,GAAsByB;MAAM,GAAtBA,MAAM,CAACC,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,OAEvC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CA9DQJ,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAgEnB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}